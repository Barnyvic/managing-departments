# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  username: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResponse {
  access_token: String!
}

type RegisterResponse {
  id: Float!
  username: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SubDepartment {
  id: ID!
  name: String!
  department: Department!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Department {
  id: ID!
  name: String!
  subDepartments: [SubDepartment!]
  createdBy: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PaginatedDepartments {
  departments: [Department!]!
  total: Int!
  currentPage: Int!
  totalPages: Int!
}

type PaginatedSubDepartments {
  subDepartments: [SubDepartment!]!
  total: Int!
  currentPage: Int!
  totalPages: Int!
}

type Query {
  getDepartments(paginationInput: PaginationInput!): PaginatedDepartments!
  getSubDepartments(paginationInput: PaginationInput!, departmentId: Int): PaginatedSubDepartments!
  getDepartment(id: Int!): Department!
}

input PaginationInput {
  page: Int! = 1
  limit: Int! = 10
}

type Mutation {
  login(input: LoginInput!): AuthResponse!
  register(input: RegisterInput!): RegisterResponse!
  createDepartment(createDepartmentInput: CreateDepartmentInput!): Department!
  updateDepartment(id: Int!, updateDepartmentInput: UpdateDepartmentInput!): Department!
  removeDepartment(id: Int!): Department!
  createSubDepartment(departmentId: Int!, createSubDepartmentInput: SubDepartmentInput!): SubDepartment!
  updateSubDepartment(id: Int!, updateSubDepartmentInput: UpdateSubDepartmentInput!): SubDepartment!
  removeSubDepartment(id: Int!): SubDepartment!
}

input LoginInput {
  username: String!
  password: String!
}

input RegisterInput {
  username: String!
  password: String!
}

input CreateDepartmentInput {
  name: String!
  subDepartments: [SubDepartmentInput!]
}

input SubDepartmentInput {
  name: String!
}

input UpdateDepartmentInput {
  name: String!
}

input UpdateSubDepartmentInput {
  name: String!
}